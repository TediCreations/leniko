# Generated by Django 3.0.4 on 2020-12-12 08:58

from django.db import migrations, models
import django.db.models.deletion
import django_enum_choices.choice_builders
import django_enum_choices.fields
import products.internal.enum


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bracelet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('brief', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('stone', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Agate', 'Agate'), ('Lapis Lazulis', 'Lapis Lazulis'), ('Amethyst', 'Amethyst'), ('Aventurine', 'Aventurine'), ('Carnelian', 'Carnelian'), ('Coral', 'Coral'), ('Emerald', 'Emerald')], default=products.internal.enum.StoneEnum['N'], enum_class=products.internal.enum.StoneEnum, max_length=13)),
                ('macrame', models.BooleanField(default=False)),
                ('color', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Red', 'Red'), ('Yellow', 'Yellow'), ('Green', 'Green'), ('Blue', 'Blue'), ('White', 'White'), ('Black', 'Black'), ('Silver', 'Silver')], default=products.internal.enum.ColorEnum['N'], enum_class=products.internal.enum.ColorEnum, max_length=6)),
                ('diameter_max', models.FloatField()),
                ('diameter_min', models.FloatField()),
                ('width_max', models.FloatField()),
                ('width_min', models.FloatField()),
                ('isAdjustable', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Earring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('brief', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('stone', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Agate', 'Agate'), ('Lapis Lazulis', 'Lapis Lazulis'), ('Amethyst', 'Amethyst'), ('Aventurine', 'Aventurine'), ('Carnelian', 'Carnelian'), ('Coral', 'Coral'), ('Emerald', 'Emerald')], default=products.internal.enum.StoneEnum['N'], enum_class=products.internal.enum.StoneEnum, max_length=13)),
                ('macrame', models.BooleanField(default=False)),
                ('color', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Red', 'Red'), ('Yellow', 'Yellow'), ('Green', 'Green'), ('Blue', 'Blue'), ('White', 'White'), ('Black', 'Black'), ('Silver', 'Silver')], default=products.internal.enum.ColorEnum['N'], enum_class=products.internal.enum.ColorEnum, max_length=6)),
                ('heigth', models.FloatField()),
                ('width_max', models.FloatField()),
                ('width_min', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Jewelry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Bronze', 'Bronze'), ('Silver 925°', 'Silver 925°'), ('Gold 14K', 'Gold 14K'), ('Gold 25K', 'Gold 25K')], default=products.internal.enum.MaterialEnum['N'], enum_class=products.internal.enum.MaterialEnum, max_length=11)),
                ('platting', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('Not platted', 'Not platted'), ('Silver', 'Silver'), ('Gold', 'Gold')], default=products.internal.enum.PlattingEnum['N'], enum_class=products.internal.enum.PlattingEnum, max_length=11)),
            ],
            options={
                'db_table': 'Jewelry',
            },
        ),
        migrations.CreateModel(
            name='Necklace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('brief', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('stone', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Agate', 'Agate'), ('Lapis Lazulis', 'Lapis Lazulis'), ('Amethyst', 'Amethyst'), ('Aventurine', 'Aventurine'), ('Carnelian', 'Carnelian'), ('Coral', 'Coral'), ('Emerald', 'Emerald')], default=products.internal.enum.StoneEnum['N'], enum_class=products.internal.enum.StoneEnum, max_length=13)),
                ('macrame', models.BooleanField(default=False)),
                ('color', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Red', 'Red'), ('Yellow', 'Yellow'), ('Green', 'Green'), ('Blue', 'Blue'), ('White', 'White'), ('Black', 'Black'), ('Silver', 'Silver')], default=products.internal.enum.ColorEnum['N'], enum_class=products.internal.enum.ColorEnum, max_length=6)),
                ('length', models.FloatField()),
                ('width_max', models.FloatField()),
                ('width_min', models.FloatField()),
                ('isAdjustable', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('brief', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('stone', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Agate', 'Agate'), ('Lapis Lazulis', 'Lapis Lazulis'), ('Amethyst', 'Amethyst'), ('Aventurine', 'Aventurine'), ('Carnelian', 'Carnelian'), ('Coral', 'Coral'), ('Emerald', 'Emerald')], default=products.internal.enum.StoneEnum['N'], enum_class=products.internal.enum.StoneEnum, max_length=13)),
                ('macrame', models.BooleanField(default=False)),
                ('color', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Red', 'Red'), ('Yellow', 'Yellow'), ('Green', 'Green'), ('Blue', 'Blue'), ('White', 'White'), ('Black', 'Black'), ('Silver', 'Silver')], default=products.internal.enum.ColorEnum['N'], enum_class=products.internal.enum.ColorEnum, max_length=6)),
                ('circumference', models.FloatField()),
                ('width_max', models.FloatField()),
                ('width_min', models.FloatField()),
                ('isAdjustable', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.TextField()),
                ('price', models.FloatField()),
                ('isFeatured', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=True)),
                ('jewelry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='products.Jewelry')),
            ],
            options={
                'db_table': 'Product',
            },
        ),
        migrations.CreateModel(
            name='JewelryPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='img/jewelryPhoto')),
                ('priority', models.DecimalField(decimal_places=0, max_digits=2)),
                ('jewelry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Jewelry')),
            ],
            options={
                'db_table': 'JewelryPhoto',
            },
        ),
        migrations.CreateModel(
            name='JewelryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('Not in group', 'Not in group'), ('Bracelet', 'Bracelet'), ('Necklace', 'Necklace'), ('Ring', 'Ring'), ('Earring', 'Earring')], default=products.internal.enum.GroupEnum['N'], enum_class=products.internal.enum.GroupEnum, max_length=12)),
                ('bracelet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Bracelet')),
                ('earring', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Earring')),
                ('necklace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Necklace')),
                ('ring', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Ring')),
            ],
            options={
                'db_table': 'JewelryGroup',
            },
        ),
        migrations.CreateModel(
            name='JewelryColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[('None', 'None'), ('Red', 'Red'), ('Yellow', 'Yellow'), ('Green', 'Green'), ('Blue', 'Blue'), ('White', 'White'), ('Black', 'Black'), ('Silver', 'Silver')], default=products.internal.enum.ColorEnum['N'], enum_class=products.internal.enum.ColorEnum, max_length=6)),
                ('jewelry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Jewelry')),
            ],
            options={
                'db_table': 'JewelryColor',
            },
        ),
        migrations.AddField(
            model_name='jewelry',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.JewelryGroup'),
        ),
    ]
